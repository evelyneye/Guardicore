#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
log         127.0.0.1 syslog     #Log configuration
chroot      /var/lib/haproxy
pidfile     /var/run/haproxy.pid
maxconn     4096
user        haproxy             #Haproxy running under user and group "haproxy"
group       haproxy
daemon

ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
ssl-default-bind-options no-sslv3
ssl-dh-param-file /opt/certbot/dhparams.pem


# turn on stats unix socket
stats socket /var/lib/haproxy/stats
 
#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
mode                    http
log                     global
option                  httplog
option                  dontlognull
option http-server-close                #Reduces latency between HAProxy and your users by closing connections but maintaining keep-alives.
option forwardfor       except 127.0.0.0/8      #Sets HAProxy to add X-Forwarded-For headers to each request
option                  redispatch
retries                 3
timeout http-request    10s
timeout queue           1m
timeout connect         10s
timeout client          1m
timeout server          1m
timeout http-keep-alive 10s
timeout check           10s
maxconn                 3000
 
#---------------------------------------------------------------------
#HAProxy Monitoring Config
#---------------------------------------------------------------------
listen *:8080                #Haproxy Monitoring run on port 8080
stats enable
stats show-legends
stats refresh 5s
stats uri /stats                             #URL for HAProxy monitoring
stats realm Haproxy\ Statistics
stats auth Password123: Password123          #User and Password for login to the monitoring dashboard
stats admin if TRUE
default_backend machineBC                    #This is optionally for monitoring backend
 
#---------------------------------------------------------------------
# FrontEnd Configuration
#---------------------------------------------------------------------
frontend machineA_80
bind *:80

# Forward Certbot verification requests to the certbot-haproxy plugin
acl is_certbot path_beg -i /.well-known/acme-challenge
use_backend certbot if is_certbot

# Redirect HTTP to HTTPS for all other cases
redirect scheme https code 301 if !{ ssl_fc } !is_certbot

{% if certbot_cert_check_result.stat.exists %}
frontend machineA_443
    bind *:443 ssl crt /opt/certbot/haproxy_fullchains/__fallback.pem crt /opt/certbot/haproxy_fullchains alpn h2,http/1.1
    http-request set-header X-Forwarded-Proto https
    default_backend machineBC
{% else %}
    # SSL not yet activated because certificates do not exist yet.
    # To create the certificates, run:
    # sudo /opt/certbot/scripts/run-certbot
    # Then execute the playbook again.
{% endif %}

#---------------------------------------------------------------------
# BackEnd round robin as balance algorithm
#---------------------------------------------------------------------
backend machineBC
    balance roundrobin                         #Balance algorithm
    option httpchk HEAD / HTTP/1.1\r\nHost:\ localhost      #Check the server application is up and healty - 200 status code
    cookie SERVERUID insert indirect nocache
    server 192.168.0.2:8080 cookie check               #Nginx1
    server 192.168.0.3:8080 cookie check               #Nginx2

backend certbot
    log global
    server certbot 127.0.0.1:8000